"""
This type stub file was generated by pyright.
"""

import pyvips

logger = ...
class VipsObject(pyvips.GObject):
    """Manage a VipsObject."""
    __slots__ = ...
    _pspec_cache = ...
    def __init__(self, pointer) -> None:
        ...
    
    @staticmethod
    def print_all(msg): # -> None:
        """Print all objects.

        Print a table of all active libvips objects. Handy for debugging.

        """
        ...
    
    def get_typeof(self, name): # -> Literal[0]:
        """Get the GType of a GObject property.

        This function returns 0 if the property does not exist.

        """
        ...
    
    def get_blurb(self, name): # -> str:
        """Get the blurb for a GObject property."""
        ...
    
    def get(self, name): # -> str | bool | Image | list[Unknown] | None:
        """Get a GObject property.

        The value of the property is converted to a Python value.

        """
        ...
    
    def set(self, name, value): # -> None:
        """Set a GObject property.

        The value is converted to the property type, if possible.

        """
        ...
    
    def set_string(self, string_options):
        """Set a series of properties using a string.

        For example::

            'fred=12, tile'
            '[fred=12]'

        """
        ...
    
    def get_description(self): # -> str:
        """Get the description of a GObject."""
        ...
    


__all__ = ['VipsObject']
